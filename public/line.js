/*These lines are all chart setup.  Pick and choose which chart features you want to utilize. */
nv.addGraph(function() {
    var chart = nv.models.lineChart()
                .options({duration: 500 })
                  .margin({left: 100})  //Adjust chart margins to give the x-axis some breathing room.
                  .useInteractiveGuideline(true)  //We want nice looking tooltips and a guideline!
                  .showLegend(true)       //Show the legend, allowing users to turn on/off line series.
                  .showYAxis(true)        //Show the y-axis
                  .showXAxis(true)        //Show the x-axis
    ;
  
    chart.xAxis     //Chart x-axis settings
        .axisLabel('Date')
        .tickFormat(function(d) {
            var dx = [d][0];
            return d3.time.format('%x')(new Date(dx));
        });

  
    chart.yAxis     //Chart y-axis settings
        .axisLabel('USD')
        .tickFormat(d3.format('.02f'));
  
    /* Done setting the chart up? Time to render it!*/
    var myData = sinAndCos();   //You need data...
  
    d3.select('#chart svg')    //Select the <svg> element you want to render the chart in.   
        .datum(myData)         //Populate the <svg> element with chart data...
        .call(chart);          //Finally, render the chart!
  
    //Update the chart when window resizes.
    nv.utils.windowResize(function() { chart.update() });
    return chart;
  });
  /**************************************
   * Simple test data generator
   */
  function sinAndCos() {
    var sin = [],sin2 = [],
        cos = [];
  
    //Data is represented as an array of {x,y} pairs.
    for (var i = 0; i < 100; i++) {
      sin.push({x: i, y: Math.sin(i/10)});
      sin2.push({x: i, y: Math.sin(i/10) *0.25 + 0.5});
      cos.push({x: i, y: .5 * Math.cos(i/10)});
    }
  
    let arr = [{"x":1509331080000,"y":"83.1900"},{"x":1509331140000,"y":"83.1950"},{"x":1509331200000,"y":"83.4000"},{"x":1509331260000,"y":"83.3600"},{"x":1509331320000,"y":"83.3300"},{"x":1509331380000,"y":"83.3850"},{"x":1509331440000,"y":"83.3900"},{"x":1509331500000,"y":"83.5150"},{"x":1509331560000,"y":"83.5600"},{"x":1509331620000,"y":"83.5753"},{"x":1509331680000,"y":"83.6800"},{"x":1509331740000,"y":"83.6550"},{"x":1509331800000,"y":"83.8150"},{"x":1509331860000,"y":"83.9000"},{"x":1509331920000,"y":"84.0700"},{"x":1509331980000,"y":"84.0548"},{"x":1509332040000,"y":"84.0650"},{"x":1509332100000,"y":"84.1850"},{"x":1509332160000,"y":"84.1250"},{"x":1509332220000,"y":"84.2100"},{"x":1509332280000,"y":"84.1800"},{"x":1509332340000,"y":"84.1800"},{"x":1509332400000,"y":"84.1853"},{"x":1509332460000,"y":"84.0950"},{"x":1509332520000,"y":"83.9700"},{"x":1509332580000,"y":"84.0500"},{"x":1509332640000,"y":"84.0450"},{"x":1509332700000,"y":"84.0700"},{"x":1509332760000,"y":"84.1200"},{"x":1509332820000,"y":"84.0700"},{"x":1509332880000,"y":"84.0600"},{"x":1509332940000,"y":"84.0600"},{"x":1509333000000,"y":"84.0600"},{"x":1509333060000,"y":"84.0600"},{"x":1509333120000,"y":"84.1200"},{"x":1509333180000,"y":"84.1050"},{"x":1509333240000,"y":"84.2000"},{"x":1509333300000,"y":"84.2400"},{"x":1509333360000,"y":"84.2800"},{"x":1509333420000,"y":"84.2700"},{"x":1509333480000,"y":"84.3000"},{"x":1509333540000,"y":"84.2852"},{"x":1509333600000,"y":"84.2800"},{"x":1509333660000,"y":"84.2550"},{"x":1509333720000,"y":"84.2462"},{"x":1509333780000,"y":"84.1708"},{"x":1509333840000,"y":"84.0850"},{"x":1509333900000,"y":"84.1100"},{"x":1509333960000,"y":"84.1100"},{"x":1509334020000,"y":"84.1900"},{"x":1509334080000,"y":"84.1900"},{"x":1509334140000,"y":"84.2350"},{"x":1509334200000,"y":"84.2500"},{"x":1509334260000,"y":"84.2300"},{"x":1509334320000,"y":"84.2152"},{"x":1509334380000,"y":"84.1200"},{"x":1509334440000,"y":"84.1300"},{"x":1509334500000,"y":"84.1500"},{"x":1509334560000,"y":"84.1100"},{"x":1509334620000,"y":"84.0200"},{"x":1509334680000,"y":"83.9600"},{"x":1509334740000,"y":"83.8600"},{"x":1509334800000,"y":"83.8800"},{"x":1509334860000,"y":"83.9100"},{"x":1509334920000,"y":"83.8300"},{"x":1509334980000,"y":"83.8844"},{"x":1509335040000,"y":"83.8949"},{"x":1509335100000,"y":"83.9300"},{"x":1509335160000,"y":"83.8800"},{"x":1509335220000,"y":"83.7800"},{"x":1509335280000,"y":"83.8300"},{"x":1509335340000,"y":"83.8556"},{"x":1509335400000,"y":"83.8500"},{"x":1509335460000,"y":"83.8100"},{"x":1509335520000,"y":"83.8350"},{"x":1509335580000,"y":"83.8350"},{"x":1509335640000,"y":"83.8650"},{"x":1509335700000,"y":"83.9000"},{"x":1509335760000,"y":"83.9200"},{"x":1509335820000,"y":"83.9100"},{"x":1509335880000,"y":"83.8950"},{"x":1509335940000,"y":"83.9000"},{"x":1509336000000,"y":"83.8600"},{"x":1509336060000,"y":"83.8600"},{"x":1509336120000,"y":"83.8466"},{"x":1509336180000,"y":"83.8405"},{"x":1509336240000,"y":"83.8650"},{"x":1509336300000,"y":"83.8050"},{"x":1509336360000,"y":"83.7153"},{"x":1509336420000,"y":"83.7651"},{"x":1509336480000,"y":"83.7550"},{"x":1509336540000,"y":"83.7200"},{"x":1509336600000,"y":"83.7300"},{"x":1509336660000,"y":"83.7100"},{"x":1509336720000,"y":"83.6900"},{"x":1509336780000,"y":"83.6800"},{"x":1509336840000,"y":"83.6900"},{"x":1509336900000,"y":"83.7530"},{"x":1509336960000,"y":"83.7700"},{"x":1509337020000,"y":"83.7650"}];

    //Line chart data should be sent as an array of series objects.
    return [
      {
        values: arr,      //values - represents the array of {x,y} data points
        key: 'Sine Wave', //key  - the name of the series.
        color: '#ff7f0e'  //color - optional: choose your own line color.
      }
    ];
  }
  
  